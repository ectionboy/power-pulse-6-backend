{
	"openapi": "3.0.1",
	"info": {
		"version": "1.1.0",
		"title": "Team project - Power Pulse",
		"description": "Team 6",
		"license": {
			"name": "MIT",
			"url": "https://opensource.org/licenses/MIT"
		}
	},
	"consumes": ["application/json", "multipart/form-data"],
	"produces": ["application/json"],
	"servers": [
		{ "url": "http://localhost:3000/api" },
		{ "url": "https://power-pulse-6-backend.onrender.com/api" }
	],
	"tags": [
		{
			"name": "Auth",
			"description": "Authorization endpoints"
		},
		{
			"name": "Diary",
			"description": "Diary endpoints"
		},
		{
			"name": "Food",
			"description": "Food endpoints"
		},
		{
			"name": "Training",
			"description": "Training endpoints"
		}
	],

	"paths": {
		"/auth/register": {
			"post": {
				"tags": ["Auth"],
				"summary": "User registration",
				"parameters": [],
				"requestBody": {
					"description": "Registration's object",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RegistrationRequest"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Successful operation",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RegistrationResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad request (invalid request body)",
						"content": {}
					},
					"409": {
						"description": "Provided email already exists",
						"content": {}
					}
				}
			}
		},
		"/auth/current": {
			"get": {
				"tags": ["Auth"],
				"summary": "current user information",
				"parameters": [],
				"security": [{ "Bearer": [] }],
				"requestBody": {},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RegistrationResponse"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {}
					}
				}
			}
		},
		"/food": {
			"get": {
				"tags": ["Food"],
				"summary": "Get all foods",
				"parameters": [
					{
						"name": "page",
						"in": "path",
						"schema": {
							"type": "integer",
							"example": "1"
						}
					},
					{
						"name": "limit",
						"description": "Limit of elements per page",
						"in": "path",
						"schema": {
							"type": "integer",
							"example": "16"
						}
					}
				],
				"security": [{ "Bearer": [] }],
				"requestBody": {},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FoodResponse"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UnauthorizedResponse"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FoodResponse404"
								}
							}
						}
					}
				}
			}
		},
		"/food/categories": {
			"get": {
				"tags": ["Food"],
				"summary": "Get all categories",
				"parameters": [],
				"security": [{ "Bearer": [] }],
				"requestBody": {},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CategoriesFoodResponse"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UnauthorizedResponse"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CategoriesFoodResponse404"
								}
							}
						}
					}
				}
			}
		}
	},
	"components": {
		"schemas": {
			"RegistrationRequest": {
				"type": "object",
				"required": ["email", "password", "name"],
				"properties": {
					"name": {
						"type": "string",
						"description": "User's name",
						"example": "Oleks"
					},
					"email": {
						"type": "string",
						"description": "User's email",
						"format": "email",
						"pattern": "/^w+@[a-zA-Z_]+?.[a-zA-Z]{2,3}$/"
					},
					"password": {
						"type": "string",
						"description": "User's password",
						"minLength": "6",
						"maxLength": "15",
						"example": "qwerty123"
					}
				}
			},
			"registrationUserSchema": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string",
						"description": "User's name",
						"example": "Oleks"
					},
					"email": {
						"type": "string",
						"description": "User's email",
						"format": "email"
					},
					"avatarURL": {
						"type": "string",
						"description": "User's avatar URL",
						"example": "http://www.gravatar.com/avatar/e4102cc7a5201c8dd9f198cdcb3cfc6c?s=250"
					}
				}
			},
			"RegistrationResponse": {
				"type": "object",
				"properties": {
					"user": {
						"$ref": "#/components/schemas/registrationUserSchema"
					}
				}
			},
			"FoodItemSchema": {
				"type": "object",
				"properties": {
					"_id": {
						"type": "string",
						"description": "Id",
						"example": "5d5169111111173622ff5773"
					},
					"weight": {
						"type": "integer",
						"description": "Weight",
						"example": "100"
					},
					"calories": {
						"type": "integer",
						"description": "Calories",
						"example": "340"
					},
					"category": {
						"type": "integer",
						"description": "Category",
						"example": "dairy"
					},
					"title": {
						"type": "integer",
						"description": "Title",
						"example": "Danbo cheese"
					},
					"groupBloodNotAllowed": {
						"type": "object",
						"properties": {
							"1":{
								"type":"boolean",
								"example": "true"
							},
							"2":{
								"type":"boolean",
								"example": "true"
							},
							"3":{
								"type":"boolean",
								"example": "false"
							},
							"4":{
								"type":"boolean",
								"example": "false"
							}
						}
					}
				}
			},
			"FoodResponse": {
				"type": "object",
				"properties": {
					"total": {
						"type": "integer",
						"description": "Number of foods",
						"example": "2621"
					},
					"page": {
						"type": "integer",
						"description": "Current page",
						"example": "1"
					},
					"limit": {
						"type": "integer",
						"description": "Current limit of elements per page",
						"example": "1"
					},
					"data": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/FoodItemSchema"
						}
					}
				}
			},
			"FoodResponse404": {
				"type": "object",
				"properties": {
					"message": {
						"type":"string",
						"example":"Foods not found"
					}
				}
			},
			"CategoriesFoodResponse": {
				"type": "object",
				"properties": {
					"_id": {
						"type": "string",
						"description": "Id",
						"example": "5d5169111111173622ff5773"
					},
					"label": {
						"type": "integer",
						"description": "Label",
						"example": "meat"
					}
				}
			},
			"CategoriesFoodResponse404": {
				"type": "object",
				"properties": {
					"message": {
						"type":"string",
						"example":"Categories not found"
					}
				}
			},
			"UnauthorizedResponse": {
				"type": "object",
				"properties": {
					"message": {
						"type":"string",
						"example":"Unauthorized"
					}
				}
			}
		},
		"securitySchemes": {
			"Bearer": {
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "JWT"
			}
		}
	}
}
